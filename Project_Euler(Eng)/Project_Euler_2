[problem]
Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
[/problem]



[code_1]

# utilize the 'recursive function'

def fib(n):
    if n == 0: return 1
    elif n == 1: return 2
    else: return fib(n-1) + fib(n-2)
    
n = 0
result = 0

while fib(n) < 4000000:
    a = fib(n)
    if a % 2 == 0: result += fib(n)
    n += 1
        
print(result)
[/code_1]




[code_2]

# just employ the variables, i and j, and convert the values by substituting the sum i and j in i, and converted i and j in j

i, j = 1, 2
result = 0

while j < 4000000:
    if i % 2 == 0: result += i
    if j % 2 == 0: result += j
    i += j
    j += i
    
print(result)
[/code_2]
