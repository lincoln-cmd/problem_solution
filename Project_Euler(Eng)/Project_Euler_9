[problem]
A Pythagorean triplet is a set of three natural numbers, a < b < c, for which,

a2 + b2 = c2
For example, 32 + 42 = 9 + 16 = 25 = 52.

There exists exactly one Pythagorean triplet for which a + b + c = 1000.
Find the product abc.
[/problem]



[explanation]
By utilizing the double 'for' loops, find the variables, a(i), b(j), and c, which fulfill the given condition, a^2 + b^2 = c^2 and a + b + c = 1000. In the second loop, if the value of a(i) is bigger than b(j), pass the other conditional because the given condition is that b is always bigger than a. In the second 'if' conditional, if root c is comparable with integral value of the root c, insert integral value into variable c.
The last 'if' conditional is that once the correct result is found and it has True value(has not 0 as value), break all loop conditional.
[/explanation]



[code]
from math import sqrt

a, b = 1, 2
result = 0

for i in range(a, 1001):
    for j in range(b, 1001):
        if i >= j:
            pass
        else:
            c = i**2 + j**2
            if int(sqrt(c)) == sqrt(c):
                c = int(sqrt(c))
                
                if i + j + c == 1000:
                    result = i*j*c
                    break
    if result:
        break

print(i, j, c)
print(result)
[/code]
